<?xml version='1.0' encoding='utf-8'?>
<scxml name="fibonacci_thread_1" version="1.0" model_src="" initial="idle" xmlns="http://www.w3.org/2005/07/scxml">
    <datamodel>
        <data id="goal_id" expr="0" type="int32" />
        <data id="order" expr="0" type="int32" />
        <data id="sequence" expr="[]" type="int32[]" />
    </datamodel>
    <state id="idle">
        <onentry>
            <assign location="sequence.length" expr="0" />
            <assign location="goal_id" expr="0" />
            <send event="action_fibonacci_thread_free">
                <param name="thread_id" expr="1" />
            </send>
        </onentry>
        <transition target="execute" event="action_fibonacci_thread_start" cond="_event.data.thread_id == 1">
            <assign location="goal_id" expr="_event.data.goal_id" />
            <assign location="order" expr="_event.data.ros_fields__order" />
        </transition>
    </state>
    <state id="execute">
        <onentry>
            <if cond="sequence.length == 0">
                <assign location="sequence[0]" expr="0" />
                <elseif cond="sequence.length == 1" />
                <assign location="sequence[1]" expr="1" />
                <else />
                <assign location="sequence[sequence.length]" expr="sequence[sequence.length - 1] + sequence[sequence.length - 2]" />
            </if>
        </onentry>
        <transition target="idle" cond="sequence.length == order + 1">
            <send event="action_fibonacci_result">
                <param name="ros_fields__sequence" expr="sequence" />
                <param name="goal_id" expr="goal_id" />
                <param expr="4" name="code" />
            </send>
        </transition>
        <transition target="execute">
            <send event="action_fibonacci_feedback">
                <param name="ros_fields__sequence" expr="sequence" />
                <param name="goal_id" expr="goal_id" />
            </send>
        </transition>
    </state>
</scxml>
