<?xml version="1.0" encoding="UTF-8"?>
<scxml
    xmlns="http://www.w3.org/2005/07/scxml"
    initial="wait_for_tick"
    version="1.0"
    name="IfThenElse"
    model_src="https://raw.githubusercontent.com/BehaviorTree/BehaviorTree.CPP/refs/heads/v3.8/src/controls/if_then_else_node.cpp">

    <!-- A default BT port reporting the amount of children -->
    <bt_declare_port_in key="CHILDREN_COUNT" type="int8" />

    <datamodel>
        <data id="child_idx" type="int8" expr="0" />
        <data id="children_count" type="int8">
            <expr>
                <bt_get_input key="CHILDREN_COUNT" />
            </expr>
        </data>
    </datamodel>

    <state id="wait_for_tick">
        <transition target="error" cond="children_count < 2 || children_count > 3" />
        <transition event="bt_tick" target="tick_condition_child" cond="child_idx == 0"/>
        <transition event="bt_tick" target="tick_exec_child" cond="child_idx > 0"/>
    </state>

    <state id="tick_condition_child">
        <onentry>
            <tick_child id="0"/>
        </onentry>
        <transition target="error" cond="child_idx != 0" />
        <get_child_response id="0" cond="_bt.response == SUCCESS" target="tick_exec_child">
            <assign location="child_idx" expr="1" />
        </get_child_response>
        <get_child_response id="0" cond="_bt.response == FAILURE && children_count_== 3" target="tick_exec_child">
            <assign location="child_idx" expr="2" />
        </get_child_response>
        <get_child_response id="0" cond="_bt.response == FAILURE && children_count_ < 3" target="wait_for_tick">
            <send event="bt_failure" />
        </get_child_response>
        <get_child_response id="0" cond="_bt.response == RUNNING" target="wait_for_tick">
            <send event="bt_running" />
        </get_child_response>
    </state>

    <state id="tick_exec_child">
        <onentry>
            <tick_child id="child_idx"/>
        </onentry>
        <transition target="error" cond="child_idx != 1 && child_idx != 2" />
        <transition target="error" cond="child_idx >= children_count" />
        <get_child_response id="child_idx" cond="_bt.response == SUCCESS" target="wait_for_tick">
            <assign location="child_idx" expr="0" />
            <send event="bt_success" />
        </get_child_response>
        <get_child_response id="child_idx" cond="_bt.response == FAILURE" target="wait_for_tick">
            <assign location="child_idx" expr="0" />
            <send event="bt_failure" />
        </get_child_response>
        <get_child_response id="child_idx" cond="_bt.response == RUNNING" target="wait_for_tick">
            <send event="bt_running" />
        </get_child_response>
    </state>

    <!-- A state to transition to when something did not work -->
    <state id="error" />

</scxml>
