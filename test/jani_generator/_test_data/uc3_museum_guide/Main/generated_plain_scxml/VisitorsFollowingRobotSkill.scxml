<scxml name="VisitorsFollowingRobotSkill" version="1.0" model_src="" initial="idle" xmlns="http://www.w3.org/2005/07/scxml">
    <datamodel>
        <!-- TYPE is_followed:bool -->
        <data id="is_followed" expr="true"/>
        <!-- TYPE SKILL_SUCCESS:int8 -->
        <data id="SKILL_SUCCESS" expr="0"/>
        <!-- TYPE SKILL_FAILURE:int8 -->
        <data id="SKILL_FAILURE" expr="1"/>
    </datamodel>
    <state id="idle">
        <transition event="srv_VisitorsFollowingRobotSkill__tick_request" target="areFollowing"/>
        <transition event="topic_PeopleDetectorFilterComponent__is_followed_msg" target="idle">
            <assign location="is_followed" expr="_event.data.ros_fields__data"/>
        </transition>
    </state>
    <state id="areFollowing">
        <onentry>
            <if cond="is_followed">
                <send event="srv_VisitorsFollowingRobotSkill__tick_response" target="srv_handler_VisitorsFollowingRobotSkill__tick">
                    <param name="ros_fields__status" expr="SKILL_SUCCESS"/>
                    <param name="ros_fields__is_ok" expr="true"/>
                </send>
                <else/>
                <send event="srv_VisitorsFollowingRobotSkill__tick_response" target="srv_handler_VisitorsFollowingRobotSkill__tick">
                    <param name="ros_fields__status" expr="SKILL_FAILURE"/>
                    <param name="ros_fields__is_ok" expr="true"/>
                </send>
            </if>
        </onentry>
        <transition target="idle"/>
    </state>
</scxml>
