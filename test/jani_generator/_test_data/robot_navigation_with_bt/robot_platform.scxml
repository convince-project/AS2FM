<?xml version="1.0" encoding="UTF-8"?>
<scxml
    initial="publish_info"
    version="1.0"
    name="RobotPlatform"
    model_src=""
    xmlns="http://www.w3.org/2005/07/scxml">

    <!-- TODO: Storing real numbers in STORM does not work. For now we have to use MODES -->
    <datamodel>
        <!-- The max speed of the robot -->
        <data id="max_lin_vel" expr="1.0" type="float32" />
        <data id="max_ang_vel" expr="0.786" type="float32" />
        <!-- The goal coordinates in the world frame -->
        <data id="goal_world_x" expr="5.0" type="float32" />
        <data id="goal_world_y" expr="-2.0" type="float32" />
        <!-- The robot pose in the world frame -->
        <data id="tf_world_robot_x" expr="0.0" type="float32" />
        <data id="tf_world_robot_y" expr="0.0" type="float32" />
        <data id="tf_world_robot_theta" expr="0.0" type="float32" />
        <!-- The last command velocities received -->
        <data id="last_cmd_lin" expr="0.0" type="float32" />
        <data id="last_cmd_ang" expr="0.0" type="float32" />
        <!-- Additional support variables -->
        <data id="tf_robot_world_x" expr="0.0" type="float32" />
        <data id="tf_robot_world_y" expr="0.0" type="float32" />
        <data id="tf_robot_world_theta" expr="0.0" type="float32" />
    </datamodel>

    <ros_topic_publisher name="pose" topic="/robot_pose" type="geometry_msgs/Pose2D" />
    <ros_topic_subscriber name="cmd_vel" topic="/cmd_vel" type="geometry_msgs/Twist" />
    <ros_topic_publisher name="goal" topic="/goal_position" type="geometry_msgs/Point" />
    <ros_time_rate name="sample_timer" rate_hz="10.0" />

    <state id="publish_info">
        <onentry>
            <!-- Update the tf_robot_world variables -->
            <!-- (tf_rob_w_x,  tf_rob_w_y)^T = R(tf_rob_w_theta) * (-(tf_w_rob_x, tf_w_rob_y)^T) -->
            <assign location="tf_robot_world_theta" expr="-tf_world_robot_theta" />
            <assign location="tf_robot_world_x"
                    expr="(-tf_world_robot_x * Math.cos(tf_robot_world_theta)) + (tf_world_robot_y * Math.sin(tf_robot_world_theta))" />
            <assign location="tf_robot_world_y"
                    expr="(-tf_world_robot_x * Math.sin(tf_robot_world_theta)) + (-tf_world_robot_y * Math.cos(tf_robot_world_theta))" />
            <!-- Publish the goal pose in the robot frame -->
            <ros_topic_publish name="goal">
                <field name="x" expr="goal_world_x * Math.cos(tf_robot_world_theta) - goal_world_y * Math.sin(tf_robot_world_theta) + tf_robot_world_x" />
                <field name="y" expr="goal_world_x * Math.sin(tf_robot_world_theta) + goal_world_y * Math.cos(tf_robot_world_theta) + tf_robot_world_y" />
                <field name="z" expr="0.0" />
            </ros_topic_publish>
            <!-- Publish the current robot pose -->
            <ros_topic_publish name="pose">
                <field name="x" expr="tf_world_robot_x" />
                <field name="y" expr="tf_world_robot_y" />
                <field name="theta" expr="tf_world_robot_theta" />
            </ros_topic_publish>
        </onentry>
        <transition target="current" />
    </state>


    <state id="current">
        <ros_topic_callback name="cmd_vel" target="current">
            <!-- We assume the robot has a maximum lin. / ang. velocity of +-0.5  -->
            <assign location="last_cmd_lin" expr="Math.max(Math.min(_msg.linear.x, max_lin_vel), -max_lin_vel)" />
            <assign location="last_cmd_ang" expr="Math.max(Math.min(_msg.angular.z, max_ang_vel), -max_ang_vel)" />
        </ros_topic_callback>
        <ros_rate_callback name="sample_timer" target="publish_info">
            <assign location="tf_world_robot_x" expr="tf_world_robot_x + 0.1 * last_cmd_lin * Math.cos(tf_world_robot_theta)" />
            <assign location="tf_world_robot_y" expr="tf_world_robot_y + 0.1 * last_cmd_lin * Math.sin(tf_world_robot_theta)" />
            <assign location="tf_world_robot_theta" expr="tf_world_robot_theta + 0.1 * last_cmd_ang" />
        </ros_rate_callback>
    </state>
</scxml>
