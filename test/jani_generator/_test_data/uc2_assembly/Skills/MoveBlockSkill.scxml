<?xml version="1.0" encoding="UTF-8"?>
<scxml
    initial="idle"
    version="1.0"
    name="MoveBlockSkill"
    model_src=""
    xmlns="http://www.w3.org/2005/07/scxml">

    <!-- server part of MoveBlockSkill -->
    <ros_action_server name="MoveBlock_action_srv" action_name="/uc2/skills/move_block" type="uc2_interfaces/MoveBlock" />
    <!-- service server regarding block_down information -->
    <ros_service_server name="get_block_status_srv" service_name="/uc2/world/get_block_status" type="uc2_interfaces/GetBlockStatus" />
	  <ros_service_server name="reset_block_status_srv" service_name="/uc2/world/reset_block_status" type="std_srvs/Empty" />

    <!-- listen time info and publish abort_time info -->
    <ros_topic_subscriber name="clock_sub" topic="/uc2/info/clock" type="std_msgs/Int32" />
    <ros_topic_publisher name="moveblock_abort_time_pub" topic="/uc2/info/properties/move_block_abort_time" type="std_msgs/Int32" />

    <datamodel>
        <!-- world info -->
        <data id="block_down" type="int32" expr="0" />
        <!-- Variables for action management -->
        <data id="block_id" type="int32" expr="0" />
        <data id="goal_id" type="int32" expr="0" />
        <!-- global time info -->
        <data id="time" type="int32" expr="0" />
    </datamodel>

    <state id="idle">
        <!-- listen for time -->
        <ros_topic_callback name="clock_sub" target="idle">
            <assign location="time" expr="_msg.data" />
        </ros_topic_callback>
        <!-- If action server is called ... -->
        <ros_action_handle_goal name="MoveBlock_action_srv" target="idle">
            <assign location="goal_id" expr="_action.goal_id" />
            <assign location="block_id" expr="_goal.block_id" />
            <!-- accept goal -->
            <ros_action_accept_goal name="MoveBlock_action_srv" goal_id="goal_id" />
            <!-- compute result -->
            <assign location="block_down" expr="block_down + 1" />
            <if cond="(block_down % 2) == 0">
                <!-- then success -->
                <ros_action_succeed name="MoveBlock_action_srv" goal_id="goal_id" />
            <else/>
                <!-- else abort -->
                <!-- publish abort time -->
                <ros_topic_publish name="moveblock_abort_time_pub">
				            <field name="data" expr="time" />
                </ros_topic_publish>
                <ros_action_aborted name="MoveBlock_action_srv" goal_id="goal_id" />
            </if>
        </ros_action_handle_goal>
        <!-- If service server get_block_status_srv is called ... -->
        <ros_service_handle_request name="get_block_status_srv" target="idle">
            <ros_service_send_response name="get_block_status_srv">
                <field name="block_down" expr="block_down" />
            </ros_service_send_response>
        </ros_service_handle_request>
        <!-- If service server reset_block_status_srv is called ... -->
        <ros_service_handle_request name="reset_block_status_srv" target="idle">
            <assign location="block_down" expr="0" />
            <ros_service_send_response name="reset_block_status_srv">
            </ros_service_send_response>
        </ros_service_handle_request>
    </state>
</scxml>
