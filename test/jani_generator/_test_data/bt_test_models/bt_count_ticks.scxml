<?xml version="1.0" encoding="UTF-8"?>
<scxml
    xmlns="http://www.w3.org/2005/07/scxml"
    initial="initial"
    version="1.0"
    name="BtCountTicks"
    model_src="">
    <!--
        A BT plugin that, upon tick, increases a counter, publishes its value on a topic and
        * n_ticks_running times, returns running.
        * After n_ticks_running times, returns success and waits for n_ticks_running ticks before returning success again.
    -->

    <!-- The topic used to publish the tick count -->
    <bt_declare_port_in key="topic_name" type="string" />
    <!-- How many ticks to get before sending out a success -->
    <bt_declare_port_in key="n_ticks_running" type="int8" />

    <datamodel>
        <data id="counter" type="int16" expr="0" />
        <!-- Assign this for accessing the port value in conditions... -->
        <data id="ticks_before_success" type="int8">
            <expr>
                <bt_get_input key="n_ticks_running" />
            </expr>
        </data>
    </datamodel>

    <ros_topic_publisher type="std_msgs/Int16" name="counter_pub">
        <topic>
            <bt_get_input key="topic_name" />
        </topic>
    </ros_topic_publisher>

    <state id="initial">
        <transition target="error" cond="ticks_before_success &lt; 0" />
        <bt_tick target="initial">
            <assign location="counter" expr="counter + 1" />
            <ros_topic_publish name="counter_pub">
                <field name="data" expr="counter" />
            </ros_topic_publish>
            <if cond="counter % (ticks_before_success + 1) &gt; 0">
                <bt_return_status status="RUNNING" />
            <else/>
                <bt_return_status status="SUCCESS" />
            </if>
        </bt_tick>
    </state>

    <state id="error" />

</scxml>
