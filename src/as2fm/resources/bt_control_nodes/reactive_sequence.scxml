<?xml version="1.0" encoding="UTF-8"?>
<scxml
    xmlns="http://www.w3.org/2005/07/scxml"
    initial="init"
    version="1.0"
    name="ReactiveSequence"
    model_src="https://raw.githubusercontent.com/BehaviorTree/BehaviorTree.CPP/refs/heads/v3.8/src/controls/reactive_sequence.cpp">

    <!-- A default BT port reporting the amount of children -->
    <bt_declare_port_in key="CHILDREN_COUNT" type="int8" />

    <datamodel>
        <data id="success_count" type="int8" expr="0" />
        <data id="running_child" type="int8" expr="-1" />
        <data id="failed_child" type="int8" expr="-1" />
        <data id="child_idx" type="int8" expr="0" />
        <data id="children_count" type="int8">
            <expr>
                <bt_get_input key="CHILDREN_COUNT" />
            </expr>
        </data>
    </datamodel>

    <state id="init">
        <!-- Check if the config is valid. If not, go to error and stop -->
        <transition target="error" cond="children_count &lt; 1" />
        <!-- The condition here will be the negation of the one above -->
        <transition target="wait_for_tick" />
    </state>

    <state id="wait_for_tick">
        <!-- React to an incoming BT Tick -->
        <bt_tick target="tick_children">
            <assign location="success_count" expr="0" />
            <assign location="child_idx" expr="0" />
            <assign location="failed_child" expr="-1" />
        </bt_tick>
        <bt_halt target="reset_children">
            <assign location="child_idx" expr="0" />
            <assign location="failed_child" expr="-1" />
        </bt_halt>
    </state>

    <state id="reset_children">
        <onentry>
            <if cond="child_idx &lt; children_count">
                <bt_halt_child id="child_idx" />
            </if>
        </onentry>
        <bt_child_halted id="child_idx" target="reset_children">
            <assign location="child_idx" expr="child_idx + 1" />
        </bt_child_halted>
        <transition cond="child_idx &gt;= children_count" target="wait_for_tick">
            <if cond="success_count == children_count">
                <bt_return_status status="SUCCESS" />
            <elseif cond="failed_child &gt;= 0" />
                <bt_return_status status="FAILURE" />
            <else/>
                <bt_return_halted/>
            </if>
            <assign location="child_idx" expr="0" />
            <assign location="success_count" expr="0" />
            <assign location="running_child" expr="-1" />
            <assign location="failed_child" expr="-1" />
        </transition>
    </state>

    <state id="tick_children">
        <onentry>
            <if cond="success_count &lt; children_count">
                <bt_tick_child id="child_idx"/>
            </if>
        </onentry>
        <bt_child_status id="child_idx" cond="_bt.status == SUCCESS" target="tick_children">
            <assign location="success_count" expr="success_count + 1" />
            <assign location="child_idx" expr="child_idx + 1" />
        </bt_child_status>
        <bt_child_status id="child_idx" cond="_bt.status == FAILURE" target="reset_children">
            <assign location="failed_child" expr="child_idx" />
            <assign location="child_idx" expr="0" />
        </bt_child_status>
        <bt_child_status id="child_idx" cond="_bt.status == RUNNING" target="reset_other_children">
            <assign location="running_child" expr="child_idx" />
            <assign location="child_idx" expr="0" />
        </bt_child_status>
        <!-- All children returned success -->
        <transition target="reset_children" cond="success_count == children_count">
            <assign location="child_idx" expr="0" />
        </transition>
        <!-- The child_idx is out of bounds -->
        <transition target="error" cond="child_idx &lt; 0 || child_idx &gt;= children_count" />
    </state>

    <state id="reset_other_children">
        <!-- Reset all children that are not running -->
        <onentry>
            <if cond="child_idx == running_child">
                <assign location="child_idx" expr="child_idx + 1" />
            </if>
            <if cond="child_idx &lt; children_count">
                <bt_halt_child id="child_idx"/>
            </if>
        </onentry>
        <bt_child_halted id="child_idx" target="reset_other_children">
            <assign location="child_idx" expr="child_idx + 1" />
        </bt_child_halted>
        <transition target="wait_for_tick" cond="child_idx &gt;= children_count">
            <bt_return_status status="RUNNING" />
        </transition>
    </state>

    <!-- A state to transition to when something did not work -->
    <state id="error" />

</scxml>
